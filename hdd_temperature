#!/bin/bash
# -*- sh -*-
# -------------------------------------------------------
#  Munin node script
#
#  Detect system hard disk list and
#  monitor hard drives temperature
#
#  Used in http://bernaerts.dyndns.org/linux/...
#
#  Parameters : 
#    $1 : none, "autoconf" or "config"
#
#  03/07/2014, V1.0 - Creation by N. Bernaerts
# -------------------------------------------------------

: << =cut

=head1 NAME

hdd_temperature - Munin plugin to monitor the internal temperature of system hard drives

=head1 APPLICABLE SYSTEMS

Any Linux computer with hard disks

=head1 CONFIGURATION

No configuration needed

=head1 INTERPRETATION

The temperature in degree celsius of hard drives

=head1 MIB INFORMATION

No specific information

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=head1 VERSION

  $Id$

=head1 BUGS

None known.

=head1 AUTHOR

Copyright (C) 2014 Nicolas Bernaerts

=head1 LICENSE

GPLv2.

=cut

# -------------------------------------------------------
#  User defined parameters
# -------------------------------------------------------

# temperature of warning level 
TEMP_WARNING="40"

# -------------------------------------------------------
#  Disk array initialisation
# -------------------------------------------------------

# load array all disks available on the system
ARR_DISK=($(lsblk --nodeps --noheadings | cut -d' ' -f1))

# -------------------------------------------------------
#  Handle autoconf call
# -------------------------------------------------------

if [ "$1" = "autoconf" ]; then
  echo "yes"

# -------------------------------------------------------
#  Handle config call
# -------------------------------------------------------

elif [ "$1" = "config" ]; then
  echo 'graph_title HDD Temperature'
  echo 'graph_vlabel Degrees Celsius'
  echo 'graph_args --base 1000'
  echo 'graph_category temperature'
  echo 'graph_info Monitor temperature sensors of declared hard disks'

  for DISK in "${ARR_DISK[@]}"
  do
    # read disk data
    DISK_MODEL=$(smartctl -i -d sat /dev/$DISK | grep "^Device Model" | sed 's/^.*:[ ]*\(.*\)$/\1/')
    DISK_SERIAL=$(smartctl -i -d sat /dev/$DISK | grep "^Serial Number" | sed 's/^.*:[ ]*\(.*\)$/\1/')
    DISK_SIZE=$(smartctl -i -d sat /dev/$DISK | grep "^User Capacity" | sed 's/^.*:[ ]*\(.*\)$/\1/')

    # display configuration
    echo "$DISK.label $DISK"
    echo "$DISK.info Model $DISK_MODEL, s/n $DISK_SERIAL, capacity $DISK_SIZE"
    echo "$DISK.warning $TEMP_WARNING"
  done

# -------------------------------------------------------
#  Handle normal call to read values
# -------------------------------------------------------

else 
  for DISK in "${ARR_DISK[@]}"
  do
    # read disk data
    DISK_TEMP=$(smartctl -a -d sat /dev/$DISK | grep "^194" | sed 's/^.*-[ ]*\([0-9]*\).*$/\1/')

    # display result
    echo "$DISK.value $DISK_TEMP"
  done
fi

# end
exit 0
