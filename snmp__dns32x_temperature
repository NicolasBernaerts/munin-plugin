#!/bin/sh
# -*- sh -*-
# -------------------------------------------------------
# Munin node script
#
# Monitor the internal temperature of a DNS-323 or DNS-325 NAS
# Retrieves temperature of case, hdd1 and hdd2
#
# Used in http://bernaerts.dyndns.org/nas/71-dns325-ffp07/314-dns325-ffp7-snmp-supervise-temperature-case-hdd
#     and http://bernaerts.dyndns.org/nas/72-dns323-ffp07/318-dns323-ffp7-snmp-supervise-temperature-case-hdd
#
# Parameters :
#   $1 : none, "snmpconf" or "config"
#
# 28/06/2014, V1.0 - Creation by N. Bernaerts
# 30/06/2014, V2.0 - Add fan speed status
# 05/07/2014, V2.1 - Add hard disk information
# 25/07/2014, V3.0 - Add DNS-323 compatibility
# -------------------------------------------------------

: << =cut

=head1 NAME

snmp__dns32x_temperature - Munin plugin to monitor the internal temperature of DNS-325 & DNS-323 NAS

=head1 APPLICABLE SYSTEMS

Any DNS-323 or DNS-325 with funplug installed and Net-SNMP installed and configured

=head1 CONFIGURATION

DNS-323 or DNS-325 must have funplug installed and Net-SNMP installed and configured.
This plugin uses public community.

=head1 INTERPRETATION

The temperature in degree celsius for case, hard disk 1 and hard disk 2.
The fan rotation speed.

=head1 MIB INFORMATION

This plugin requires support for extended snmp-temperature MIBs.

=head1 MAGIC MARKERS

  #%# family=snmpauto
  #%# capabilities=snmpconf

=head1 VERSION

  $Id$

=head1 BUGS

None known.

=head1 AUTHOR

Copyright (C) 2014 Nicolas Bernaerts

=head1 LICENSE

GPLv2.

=cut

# define display value for 3 fan states (stop, low & high)
FAN_STOP="20"
FAN_LOW="22"
FAN_HIGH="24"

# -------------------------------------------------------
# Configure all MIBs adresses
# -------------------------------------------------------

# extended MIB for temperature
MIB_FAN="1.3.6.1.4.1.8072.1.3.2.3.1.2.9.115.112.101.101.100.95.102.97.110"
MIB_TEMP_CASE="1.3.6.1.4.1.8072.1.3.2.3.1.2.20.116.101.109.112.101.114.97.116.117.114.101.95.105.110.116.101.114.110.97.108"
MIB_TEMP_DISK1="1.3.6.1.4.1.8072.1.3.2.3.1.2.17.116.101.109.112.101.114.97.116.117.114.101.95.100.105.115.107.49"
MIB_TEMP_DISK2="1.3.6.1.4.1.8072.1.3.2.3.1.2.17.116.101.109.112.101.114.97.116.117.114.101.95.100.105.115.107.50"
MIB_INFO_DISK1="1.3.6.1.4.1.8072.1.3.2.3.1.2.17.105.110.102.111.114.109.97.116.105.111.110.95.100.105.115.107.49"
MIB_INFO_DISK2="1.3.6.1.4.1.8072.1.3.2.3.1.2.17.105.110.102.111.114.109.97.116.105.111.110.95.100.105.115.107.50"

# -------------------------------------------------------
# Get NAS address
# -------------------------------------------------------

# get nas name from script name
NAS_IP=`basename $0 | cut -d'_' -f2`

# -------------------------------------------------------
# Read all MIBs data from the NAS
# -------------------------------------------------------

# if not in autoconf process, read SNMP data
if [ "$1" != "snmpconf" ]; then
  # read SNMP MIB
  MIB_RESULT=`snmpget -v1 -One -c public $NAS_IP $MIB_FAN $MIB_TEMP_CASE $MIB_TEMP_DISK1 $MIB_TEMP_DISK2 $MIB_INFO_DISK1 $MIB_INFO_DISK2`

  # get values from result
  VALUE_FAN=`echo $MIB_RESULT | sed 's/^.*'$MIB_FAN'[ =:STRING]*"\([a-z]*\)".*$/\1/g'`
  VALUE_TEMP_CASE=`echo $MIB_RESULT | sed 's/^.*'$MIB_TEMP_CASE'[ =:STRING]*"\([0-9]*\)".*$/\1/g'`
  VALUE_TEMP_DISK1=`echo $MIB_RESULT | sed 's/^.*'$MIB_TEMP_DISK1'[" =:STRING]*\([0-9]*\)".*$/\1/g'`
  VALUE_TEMP_DISK2=`echo $MIB_RESULT | sed 's/^.*'$MIB_TEMP_DISK2'[" =:STRING]*\([0-9]*\)".*$/\1/g'`
  VALUE_INFO_DISK1=`echo $MIB_RESULT | sed 's/^.*'$MIB_INFO_DISK1'[" =:STRING]*\([^"]*\).*$/\1/g'`
  VALUE_INFO_DISK2=`echo $MIB_RESULT | sed 's/^.*'$MIB_INFO_DISK2'[" =:STRING]*\([^"]*\).*$/\1/g'`
fi

# -------------------------------------------------------
# Handle SNMP autoconf call
# -------------------------------------------------------

# snmpconf : announce required MIBs
if [ "$1" = "snmpconf" ]; then
  echo "require $MIB_FAN"
  echo "require $MIB_TEMP_CASE"
  echo "require $MIB_TEMP_DISK1"
  echo "require $MIB_TEMP_DISK2"

# -------------------------------------------------------
# Handle configuration call
# -------------------------------------------------------

# config : read node configuration
elif [ "$1" = "config" ]; then
  # NAS general infos
  echo "host_name $NAS_IP"
  echo "graph_title Temperature Levels & Fan speed for $NAS_IP"
  echo "graph_vlabel Degree Celsius"
  echo "graph_category temperature"
  echo "graph_info Temperature Levels & Fan speed"
  echo "graph_args --lower-limit $FAN_STOP --rigid"

  # fan speed
  echo "fan.info Fan speed"
  echo "fan.label Fan"
  echo "fan.colour c0c0c0"
  echo "fan.draw AREA"

  # internal temperature
  echo "case.label Internal case"
  echo "case.colour 00ff00"
  echo "case.info Case internal sensor"

  # disk1 temperature
  echo "disk1.label Disk 1"
  echo "disk1.colour 0000ff"
  echo "disk1.info HDD sensor, $VALUE_INFO_DISK1"

  # disk2 temperature
  echo "disk2.label Disk 2"
  echo "disk2.colour ff00ff"
  echo "disk2.info HDD sensor, $VALUE_INFO_DISK2"

# -------------------------------------------------------
# Handle data read call
# -------------------------------------------------------

# normal case : read temperatures
else
  # publish fan speed
  case $VALUE_FAN in
    stop)   echo "fan.value $FAN_STOP" ;;
    rotate) echo "fan.value $FAN_LOW" ;;
    low)    echo "fan.value $FAN_LOW" ;;
    high)   echo "fan.value $FAN_HIGH" ;;
    *)      echo "fan.value U" ;;
  esac

  # publish temperature levels
  echo "case.value $VALUE_TEMP_CASE"
  echo "disk1.value $VALUE_TEMP_DISK1"
  echo "disk2.value $VALUE_TEMP_DISK2"
fi

exit 0
