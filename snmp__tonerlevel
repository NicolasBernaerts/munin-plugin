#!/bin/sh
# -------------------------------------------------------
#  Munin node script
#
#  Monitor the toner level of HP color printers
#  Retrieves toner levels for black, cyan, magenta & yellow cartridges
#
#  Used in http://bernaerts.dyndns.org/linux/...
#
#  Parameters : 
#    $1 : none, "snmpconf" or "config"
#
#  20/06/2014, V1.0 - Creation by N. Bernaerts
# -------------------------------------------------------
# -*- sh -*-

: << =cut

=head1 NAME

snmp__tonerlevel - Munin plugin to monitor the toner level of HP Printers

=head1 APPLICABLE SYSTEMS

Any SNMP-capable HP Color Printer

=head1 CONFIGURATION

No specific configuration needed.
This plugin uses public community.

=head1 INTERPRETATION

The level in percentage of printer toner cartridges

=head1 MIB INFORMATION

This plugin requires support for the cartridge level MIBs.

=head1 MAGIC MARKERS

  #%# family=snmpauto
  #%# capabilities=snmpconf

=head1 VERSION

  $Id$

=head1 BUGS

None known.

=head1 AUTHOR

Copyright (C) 2014 Nicolas Bernaerts

=head1 LICENSE

GPLv2.

=cut

# -------------------------------------------------------
#  Configure all MIBs adresses
# -------------------------------------------------------

# printer name
MIB_NAME="1.3.6.1.2.1.1.6.0"

# cartridge colors labels
MIB_LABEL_BLACK="1.3.6.1.2.1.43.12.1.1.4.1.1"
MIB_LABEL_CYAN="1.3.6.1.2.1.43.12.1.1.4.1.2"
MIB_LABEL_MAGENTA="1.3.6.1.2.1.43.12.1.1.4.1.3"
MIB_LABEL_YELLOW="1.3.6.1.2.1.43.12.1.1.4.1.4"

# cartridge colors max level
MIB_MAX_BLACK="1.3.6.1.2.1.43.11.1.1.8.1.1"
MIB_MAX_CYAN="1.3.6.1.2.1.43.11.1.1.8.1.2"
MIB_MAX_MAGENTA="1.3.6.1.2.1.43.11.1.1.8.1.3"
MIB_MAX_YELLOW="1.3.6.1.2.1.43.11.1.1.8.1.4"

# cartridge colors current level
MIB_LEVEL_BLACK="1.3.6.1.2.1.43.11.1.1.9.1.1"
MIB_LEVEL_CYAN="1.3.6.1.2.1.43.11.1.1.9.1.2"
MIB_LEVEL_MAGENTA="1.3.6.1.2.1.43.11.1.1.9.1.3"
MIB_LEVEL_YELLOW="1.3.6.1.2.1.43.11.1.1.9.1.4"

# -------------------------------------------------------
#  Get printer specs
# -------------------------------------------------------

# get printer name from script name
PRINTER_IP=`basename $0 | cut -d'_' -f2`

# -------------------------------------------------------
#  Read all MIBs data from the printer
# -------------------------------------------------------

# if not in autoconf process, read SNMP data
if [ "$1" != "snmpconf" ]; then 
  # read SNMP MIB
  MIB_RESULT=`snmpget -v1 -One -c public $PRINTER_IP $MIB_NAME $MIB_MAX_BLACK $MIB_MAX_CYAN $MIB_MAX_MAGENTA $MIB_MAX_YELLOW $MIB_LABEL_BLACK $MIB_LABEL_CYAN $MIB_LABEL_MAGENTA $MIB_LABEL_YELLOW $MIB_LEVEL_BLACK $MIB_LEVEL_CYAN $MIB_LEVEL_MAGENTA $MIB_LEVEL_YELLOW`

  # get values from result
  PRINTER_NAME=`echo $MIB_RESULT | sed 's/.*'$MIB_NAME'[^"]*"\([^"]*\).*/\1/g'`
  LABEL_BLACK=`echo $MIB_RESULT | sed 's/.*'$MIB_LABEL_BLACK'[^"]*"\([^"]*\).*/\1/g'`
  LABEL_CYAN=`echo $MIB_RESULT | sed 's/.*'$MIB_LABEL_CYAN'[^"]*"\([^"]*\).*/\1/g'`
  LABEL_MAGENTA=`echo $MIB_RESULT | sed 's/.*'$MIB_LABEL_MAGENTA'[^"]*"\([^"]*\).*/\1/g'`
  LABEL_YELLOW=`echo $MIB_RESULT | sed 's/.*'$MIB_LABEL_YELLOW'[^"]*"\([^"]*\).*/\1/g'`
  MAX_BLACK=`echo $MIB_RESULT | sed 's/.*'$MIB_MAX_BLACK'[ =:A-Z]*\([0-9]*\).*/\1/g'`
  MAX_CYAN=`echo $MIB_RESULT | sed 's/.*'$MIB_MAX_CYAN'[ =:A-Z]*\([0-9]*\).*/\1/g'`
  MAX_MAGENTA=`echo $MIB_RESULT | sed 's/.*'$MIB_MAX_MAGENTA'[ =:A-Z]*\([0-9]*\).*/\1/g'`
  MAX_YELLOW=`echo $MIB_RESULT | sed 's/.*'$MIB_MAX_YELLOW'[ =:A-Z]*\([0-9]*\).*/\1/g'`
  LEVEL_BLACK=`echo $MIB_RESULT | sed 's/.*'$MIB_LEVEL_BLACK'[ =:A-Z]*\([0-9]*\).*/\1/g'`
  LEVEL_CYAN=`echo $MIB_RESULT | sed 's/.*'$MIB_LEVEL_CYAN'[ =:A-Z]*\([0-9]*\).*/\1/g'`
  LEVEL_MAGENTA=`echo $MIB_RESULT | sed 's/.*'$MIB_LEVEL_MAGENTA'[ =:A-Z]*\([0-9]*\).*/\1/g'`
  LEVEL_YELLOW=`echo $MIB_RESULT | sed 's/.*'$MIB_LEVEL_YELLOW'[ =:A-Z]*\([0-9]*\).*/\1/g'`
fi

# -------------------------------------------------------
#  Handle SNMP autoconf call
# -------------------------------------------------------

# snmpconf : announce required MIBs
if [ "$1" = "snmpconf" ]; then
  echo "require $MIB_LEVEL_BLACK"
  echo "require $MIB_LEVEL_CYAN"
  echo "require $MIB_LEVEL_MAGENTA"
  echo "require $MIB_LEVEL_YELLOW"

# -------------------------------------------------------
#  Handle configuration call
# -------------------------------------------------------

# config : read node configuration
elif [ "$1" = "config" ]; then
  # printer general infos
  echo "host_name $PRINTER_IP"
  echo "graph_title $PRINTER_NAME Toner"
  echo "graph_vlabel Toner Level"
  echo "graph_group $PRINTER_IP"
  echo "graph_category toner"
  echo "graph_info Toner status"
  echo "graph_args --upper-limit 400 -l 0"

  # black cartridge
  echo "blackavailable.info Display the level in % of $LABEL_BLACK cartridge"
  echo "blackavailable.label $LABEL_BLACK (available)"
  echo "blackavailable.draw AREA"
  echo "blackavailable.colour 000000"
  echo "blackavailable.min 0"
  echo "blackavailable.max 100"
  echo "blackused.label $LABEL_BLACK (used)"
  echo "blackused.draw STACK"
  echo "blackused.colour e0e0e0"
  echo "blackused.min 0"
  echo "blackused.max 100"

  # cyan cartridge
  echo "cyanavailable.info Display the level in % of $LABEL_CYAN cartridge"
  echo "cyanavailable.label $LABEL_CYAN (available)"
  echo "cyanavailable.draw STACK"
  echo "cyanavailable.colour 00ffff"
  echo "cyanavailable.min 0"
  echo "cyanavailable.max 100"
  echo "cyanused.label $LABEL_CYAN (used)"
  echo "cyanused.draw STACK"
  echo "cyanused.colour e0ffff"
  echo "cyanused.min 0"
  echo "cyanused.max 100"

  # magenta cartridge
  echo "magentaavailable.info Display the level in % of $LABEL_MAGENTA cartridge"
  echo "magentaavailable.label $LABEL_MAGENTA (available)"
  echo "magentaavailable.draw STACK"
  echo "magentaavailable.colour ff00ff"
  echo "magentaavailable.min 0"
  echo "magentaavailable.max 100"
  echo "magentaused.label $LABEL_MAGENTA (used)"
  echo "magentaused.draw STACK"
  echo "magentaused.colour ffe0ff"
  echo "magentaused.min 0"
  echo "magentaused.max 100"

  # yellow cartridge
  echo "yellowavailable.info Display the level in % of $LABEL_YELLOW cartridge"
  echo "yellowavailable.label $LABEL_YELLOW (available)"
  echo "yellowavailable.draw STACK"
  echo "yellowavailable.colour ffff00"
  echo "yellowavailable.min 0"
  echo "yellowavailable.max 100"
  echo "yellowused.label $LABEL_YELLOW (used)"
  echo "yellowused.draw STACK"
  echo "yellowused.colour ffffe0"
  echo "yellowused.min 0"
  echo "yellowused.max 100"

# -------------------------------------------------------
#  Handle data read call
# -------------------------------------------------------

# normal case : read cartridge levels
else
  # calculate percentage
  BLACK_AVAILABLE=$((100 * LEVEL_BLACK / MAX_BLACK))
  BLACK_USED=$((100 - BLACK_AVAILABLE))
  CYAN_AVAILABLE=$((100 * LEVEL_CYAN / MAX_CYAN)) 
  CYAN_USED=$((100 - CYAN_AVAILABLE))
  MAGENTA_AVAILABLE=$((100 * LEVEL_MAGENTA / MAX_MAGENTA)) 
  MAGENTA_USED=$((100 - MAGENTA_AVAILABLE))
  YELLOW_AVAILABLE=$((100 * LEVEL_YELLOW / MAX_YELLOW)) 
  YELLOW_USED=$((100 - YELLOW_AVAILABLE))

  # publish color levels
  echo "blackavailable.value $BLACK_AVAILABLE" 
  echo "blackused.value $BLACK_USED" 
  echo "cyanavailable.value $CYAN_AVAILABLE" 
  echo "cyanused.value $CYAN_USED" 
  echo "magentaavailable.value $MAGENTA_AVAILABLE" 
  echo "magentaused.value $MAGENTA_USED" 
  echo "yellowavailable.value $YELLOW_AVAILABLE" 
  echo "yellowused.value $YELLOW_USED" 
fi

exit 0
