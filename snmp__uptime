#!/bin/bash
# -*- sh -*-
# -------------------------------------------------------
# Munin node script
#
# Monitor uptime of any SNMP device
#
# Used in http://bernaerts.dyndns.org/nas/...
#
# Parameters :
#   $1 : none, "snmpconf" or "config"
#
# 10/05/2016, V1.0 - Creation by N. Bernaerts
# -------------------------------------------------------

: << =cut

=head1 NAME

snmp__uptime - Munin plugin to monitor uptime of any SNMP enabled device

=head1 APPLICABLE SYSTEMS

Any device with SNMP enabled

=head1 CONFIGURATION

device must have SNMP enabled.
This plugin uses public community.

=head1 INTERPRETATION

Uptime in days.

=head1 MIB INFORMATION

No specific need

=head1 MAGIC MARKERS

  #%# family=snmpauto
  #%# capabilities=snmpconf

=head1 VERSION

  $Id$

=head1 BUGS

None known.

=head1 AUTHOR

Copyright (C) 2016 Nicolas Bernaerts

=head1 LICENSE

GPLv2.

=cut


# -------------------------------------------------------
# Configure all MIBs adresses
# -------------------------------------------------------

# declare MIB
MIB_UPTIME="1.3.6.1.2.1.1.3.0"

# -------------------------------------------------------
# Get NAS address
# -------------------------------------------------------

# get nas name from script name
NAS_IP=$(basename $0 | cut -d'_' -f2)

# -------------------------------------------------------
#   Handle SNMP snmpconf call
#   Announce required MIBs
# -------------------------------------------------------
if [ "$1" = "snmpconf" ];
then

  echo "require ${MIB_UPTIME}"

# -------------------------------------------------------
#   Handle SNMP config call
#   Publish plugin configuration
# -------------------------------------------------------
elif [ "$1" = "config" ];
then

  # get UPS connection hostname
  echo "host_name ${NAS_IP}"

  # graph  description
  echo "graph_title Uptime"
  echo "graph_args --base 1000 -l 0 "
  echo "graph_vlabel uptime in days"
  echo "graph_category system"
  echo "uptime.label uptime"
  echo "uptime.draw AREA"
  echo "uptime.cdef uptime,8640000,/"

# -------------------------------------------------------
#   Handle SNMP normal call
#   Provide uptime (in 100th second)
# -------------------------------------------------------
else

  # read SNMP MIB
  MIB_RESULT=$(snmpget -v1 -c public ${NAS_IP} ${MIB_UPTIME})

  # get values from result (in 100th/second)
  UPTIME=$(echo ${MIB_RESULT} | sed 's/^.*(\([0-9]*\)).*$/\1/g')

  # publish data
  echo "uptime.value ${UPTIME}"

fi

# exit
exit 0
