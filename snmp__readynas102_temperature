#!/bin/sh
# -*- sh -*-
# -------------------------------------------------------
# Munin node script
#
# Monitor fan speed and internal temperature of a ReadyNAS 102
# Retrieves temperature of CPU, hdd1 and hdd2
#
# Used in http://bernaerts.dyndns.org/nas/...
#
# Parameters :
#   $1 : none, "snmpconf" or "config"
#
# 09/05/2016, V1.0 - Creation by N. Bernaerts
# -------------------------------------------------------

: << =cut

=head1 NAME

snmp__readynas102_temperature - Munin plugin to monitor fan speed and temperatures of ReadyNAS 102

=head1 APPLICABLE SYSTEMS

Any ReadyNAS 102 with SNMP enabled

=head1 CONFIGURATION

ReadyNAS 102 must have SNMP enabled.
This plugin uses public community.

=head1 INTERPRETATION

The temperature in degree celsius for CPU, hard disk 1 and hard disk 2.
The fan rotation speed in RPM.

=head1 MIB INFORMATION

This plugin requires that ReadyNAS MIB has been previoulsy declared on the server.
This can be done with following command :
# wget --no-check-certificate -O /usr/share/snmp/mibs/READYNASOS-MIB.txt https://YourNASIP/READYNASOS-MIB.txt

=head1 MAGIC MARKERS

  #%# family=snmpauto
  #%# capabilities=snmpconf

=head1 VERSION

  $Id$

=head1 BUGS

None known.

=head1 AUTHOR

Copyright (C) 2016 Nicolas Bernaerts

=head1 LICENSE

GPLv2.

=cut


# -------------------------------------------------------
# Parameters
# -------------------------------------------------------

# display range
DISPLAY_MIN=0
DISPLAY_MAX=90

# fan range
FAN_MAX=25

# define warning and critical temperature levels
CPU_WARNING=70
CPU_CRITICAL=80
DISK_WARNING=45
DISK_CRITICAL=50

# -------------------------------------------------------
# Configure all MIBs adresses
# -------------------------------------------------------

# declare MIB
MIB_FAN_RPM="READYNASOS-MIB::fanRPM.1"
MIB_FAN_STATE="READYNASOS-MIB::fanStatus.1"
MIB_CPU_TEMP="READYNASOS-MIB::temperatureValue.1"
MIB_DISK1_TEMP="READYNASOS-MIB::diskTemperature.1"
MIB_DISK1_CAPA="READYNASOS-MIB::diskCapacity.1"
MIB_DISK1_MODEL="READYNASOS-MIB::diskModel.1"
MIB_DISK1_SERIAL="READYNASOS-MIB::diskSerial.1"
MIB_DISK1_STATE="READYNASOS-MIB::diskState.1"
MIB_DISK2_TEMP="READYNASOS-MIB::diskTemperature.2"
MIB_DISK2_CAPA="READYNASOS-MIB::diskCapacity.2"
MIB_DISK2_MODEL="READYNASOS-MIB::diskModel.2"
MIB_DISK2_SERIAL="READYNASOS-MIB::diskSerial.2"
MIB_DISK2_STATE="READYNASOS-MIB::diskState.2"

# -------------------------------------------------------
# Get NAS address
# -------------------------------------------------------

# get nas name from script name
NAS_IP=`basename $0 | cut -d'_' -f2`

# -------------------------------------------------------
# Handle SNMP autoconf call
# -------------------------------------------------------

# snmpconf : announce required MIBs
if [ "$1" = "snmpconf" ]; then
  echo "require ${MIB_FAN_RPM}"
  echo "require ${MIB_CPU_TEMP}"
  echo "require ${MIB_FAN_STATE}"
  echo "require ${MIB_DISK1_TEMP}"
  echo "require ${MIB_DISK1_CAPA}"
  echo "require ${MIB_DISK1_MODEL}"
  echo "require ${MIB_DISK1_SERIAL}"
  echo "require ${MIB_DISK1_STATE}"
  echo "require ${MIB_DISK2_TEMP}"
  echo "require ${MIB_DISK2_CAPA}"
  echo "require ${MIB_DISK2_MODEL}"
  echo "require ${MIB_DISK2_SERIAL}"
  echo "require ${MIB_DISK2_STATE}"

# -------------------------------------------------------
# Handle configuration call
# -------------------------------------------------------

# config : read node configuration
elif [ "$1" = "config" ]; then
  # read SNMP MIB
  MIB_RESULT=$(snmpget -v1 -c public ${NAS_IP} ${MIB_FAN_STATE} ${MIB_DISK1_CAPA} ${MIB_DISK1_MODEL} ${MIB_DISK1_SERIAL} ${MIB_DISK1_STATE} ${MIB_DISK2_CAPA} ${MIB_DISK2_MODEL} ${MIB_DISK2_SERIAL} ${MIB_DISK2_STATE})

  # get values from result
  FAN_STATE=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_FAN_STATE}'[^"]*"\([^"]*\)".*$/\1/g' | tr '[:upper:]' '[:lower:]')
  DISK1_STATE=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK1_STATE}'[^"]*"\([^"]*\)".*$/\1/g' | tr '[:upper:]' '[:lower:]')
  DISK2_STATE=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK2_STATE}'[^"]*"\([^"]*\)".*$/\1/g' | tr '[:upper:]' '[:lower:]')
  DISK1_CAPA=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK1_CAPA}'[^"]*"\([^"]*\)".*$/\1/g')
  DISK2_CAPA=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK2_CAPA}'[^"]*"\([^"]*\)".*$/\1/g')
  DISK1_MODEL=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK1_MODEL}'[^"]*"\([^"]*\)".*$/\1/g')
  DISK2_MODEL=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK2_MODEL}'[^"]*"\([^"]*\)".*$/\1/g')
  DISK1_SERIAL=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK1_SERIAL}'[^"]*"\([^"]*\)".*$/\1/g')
  DISK2_SERIAL=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK2_SERIAL}'[^"]*"\([^"]*\)".*$/\1/g')

  # convert capacity in Gb
  DISK1_CAPA=$((DISK1_CAPA/1073741824))
  DISK2_CAPA=$((DISK2_CAPA/1073741824))

  # NAS general infos
  echo "host_name ${NAS_IP}"
  echo "graph_title Temperature & Fan speed (${NAS_IP})"
  echo "graph_vlabel Degree Celsius"
  echo "graph_category temperature"
  echo "graph_info Temperature Levels & Fan speed"
  echo "graph_args --lower-limit ${DISPLAY_MIN} --upper-limit ${DISPLAY_MAX} --rigid"

  # fan speed
  echo "fan.label Fan (${FAN_STATE})"
  echo "fan.colour c0c0c0"
  echo "fan.info Fan speed in RPM (/80)"
  echo "fan.draw AREA"

  # CPU temperature
  echo "cpu.label CPU"
  echo "cpu.colour 00ff00"
  echo "cpu.info CPU tempterature"
  echo "cpu.warning :${CPU_WARNING}"
  echo "cpu.critical :${CPU_CRITICAL}"
  
  # disk1 temperature
  echo "disk1.label Disk 1 (${DISK1_STATE})"
  echo "disk1.colour 0000ff"
  echo "disk1.info ${DISK1_CAPA} Gb, model ${DISK1_MODEL}, s/n ${DISK1_SERIAL}"
  echo "disk1.warning :${DISK_WARNING}"
  echo "disk1.critical :${DISK_CRITICAL}"

  # disk2 temperature
  echo "disk2.label Disk 2 (${DISK2_STATE})"
  echo "disk2.colour ff00ff"
  echo "disk2.info ${DISK2_CAPA} Gb, model ${DISK2_MODEL}, s/n ${DISK2_SERIAL}"
  echo "disk2.warning :${DISK_WARNING}"
  echo "disk2.critical :${DISK_CRITICAL}"

# -------------------------------------------------------
# Handle data read call
# -------------------------------------------------------

# normal case : read RPM and temperatures
else
  # read SNMP MIB
  MIB_RESULT=$(snmpget -v1 -c public ${NAS_IP} ${MIB_FAN_RPM} ${MIB_CPU_TEMP} ${MIB_DISK1_TEMP} ${MIB_DISK2_TEMP})

  # get values from result
  FAN_RPM=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_FAN_RPM}'[^0-9]*\([0-9]*\).*$/\1/g')
  CPU_TEMP=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_CPU_TEMP}'[^0-9]*\([0-9]*\).*$/\1/g')
  DISK1_TEMP=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK1_TEMP}'[^0-9]*\([0-9]*\).*$/\1/g')
  DISK2_TEMP=$(echo ${MIB_RESULT} | sed 's/^.*'${MIB_DISK2_TEMP}'[^0-9]*\([0-9]*\).*$/\1/g')

  # convert RMP (2000 -> 25)
  FAN_RPM=$((FAN_RPM/80))

  # publish levels
  echo "fan.value ${FAN_RPM}"
  echo "cpu.value ${CPU_TEMP}"
  echo "disk1.value ${DISK1_TEMP}"
  echo "disk2.value ${DISK2_TEMP}"
fi

# exit
exit 0
